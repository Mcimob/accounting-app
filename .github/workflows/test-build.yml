name: CI Pipeline

on:
  push:
    branches:
      - test
      - main
      - develop
  pull_request:
    branches:
      - test
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Validate project
        run: mvn validate

      - name: Run linting (Checkstyle)
        run: mvn checkstyle:check

      - name: Run tests
        run: mvn test

  build:
    needs: test
    if: github.ref_name == 'main' || github.ref_name == 'test'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set environment variables based on branch
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "DOCKER_TAG=prod" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "test" ]; then
            echo "DOCKER_TAG=test" >> $GITHUB_ENV
          fi

      - name: Build frontend assets
        run: mvn vaadin:build-frontend -Pproduction

      - name: Build project
        run: mvn package -DskipTests -Pproduction

      - name: Confirm JAR file exists
        run: ls target/
        
      - name: Log in to private Docker registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/accounting-app/${{ env.DOCKER_TAG }}:latest

      - name: Logout from Docker registry
        run: docker logout ${{ secrets.REGISTRY_URL }}
