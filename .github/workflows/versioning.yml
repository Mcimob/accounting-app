name: Version Management

on:
  pull_request:
    branches:
      - test
    types:
      - closed  # Runs only when PR is merged into 'test'
  push:
    branches:
      - develop  # Runs only when something is merged into 'develop'

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for versioning

      - name: Determine branch
        id: vars
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Modify version in pom.xml
        run: |
          if [ "$BRANCH" = "test" ]; then
            echo "Removing -SNAPSHOT from version..."
            sed -i 's/<version>\(.*\)-SNAPSHOT<\/version>/<version>\1<\/version>/g' pom.xml
          elif [ "$BRANCH" = "develop" ]; then
            VERSION=$(grep -oP '(?<=<version>)[0-9]+\.[0-9]+\.[0-9]+.*(?=<\/version>)' pom.xml | head -n 1)
            echo "Current Version: $VERSION"
            if [[ "$VERSION" =~ .*SNAPSHOT ]]; then
            else 
              echo "Not a snapshot"
              echo "Incrementing version..."
              MAJOR=$(echo $VERSION | cut -d. -f1)
              MINOR=$(echo $VERSION | cut -d. -f2)
              PATCH=$(echo $VERSION | cut -d. -f3)
              NEW_PATCH=$((PATCH + 1))
              NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH-SNAPSHOT"
              sed -i "s/<version>$VERSION<\/version>/<version>$NEW_VERSION<\/version>/g" pom.xml
            fi
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add pom.xml
          git commit -m "Update version in pom.xml [ci skip]" || exit 0  # Avoid failing if no changes
          git push

  merge-back:
    needs: update-version
    if: github.event.pull_request.merged == true && github.ref_name == 'test'  # Only run if a PR was merged into test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge test into develop
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout develop
          git pull origin develop
          git merge --no-ff test -m "Auto-merge test into develop [ci skip]"
          git push origin develop
